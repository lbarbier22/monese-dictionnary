<!DOCTYPE html>
<html lang="fr">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mes favoris ‚Äì Mon√®se</title>
    <link rel="stylesheet" href="/style.css">
</head>
<body>
<%- include('navbar') %>

<div class="main-container">
    <div class="carte">
    <div class="header-favoris">
        <h1>‚ù§Ô∏è Mes favoris</h1>
        <button id="vider-favoris" class="btn-vider-favoris" title="Vider tous les favoris" style="display: none;">
            <span class="heart-icon">üíî</span>
            <span class="btn-text">Vider</span>
        </button>
    </div>
    <div id="favoris-container">
        <div id="favoris-vides" style="display: none;">
            <div style="text-align: center; margin-top: 2rem;">
                <p style="font-size: 1.5rem; color: #666; margin: 2rem 0;">
                    Aucun mot en favoris pour le moment.<br>
                    <span style="font-size: 1.2rem;">Parcourez le dictionnaire et ajoutez vos mots pr√©f√©r√©s !</span>
                </p>
                <div>
                    <a href="/" style="text-decoration: none;">
                        <button style="margin: 0.5rem;">üîÄ D√©couvrir un mot</button>
                    </a>
                    <a href="/liste" style="text-decoration: none;">
                        <button style="margin: 0.5rem;">üìñ Parcourir la liste</button>
                    </a>
                </div>
            </div>
        </div>
        <div id="favoris-liste" class="liste-scrollable" style="display: none;">
            <!-- Les favoris seront ajout√©s ici par JavaScript -->
        </div>
    </div>
</div>

<script>
    const allMots = <%- JSON.stringify(mots) %>;

    function afficherFavoris() {
        // Les favoris sont maintenant pass√©s depuis le serveur
        const favoris = <%- JSON.stringify(userFavoris) %>;
        const containerVides = document.getElementById('favoris-vides');
        const containerListe = document.getElementById('favoris-liste');
        const btnVider = document.getElementById('vider-favoris');

        if (favoris.length === 0) {
            containerVides.style.display = 'block';
            containerListe.style.display = 'none';
            btnVider.style.display = 'none';
        } else {
            containerVides.style.display = 'none';
            containerListe.style.display = 'block';
            btnVider.style.display = 'flex';
            
            // R√©cup√©rer les mots favoris et les trier par ordre alphab√©tique
            const motsFavoris = allMots.filter(m => 
                favoris.some(f => f.mot === m.Mot.toLowerCase())
            ).sort((a, b) => a.Mot.localeCompare(b.Mot));
            
            // G√©n√©rer le HTML simplifi√©
            containerListe.innerHTML = motsFavoris.map(mot => 
                `<div class="mot-item-favoris">
                    <div class="mot-favori-content">
                        <a href="/mots/${encodeURIComponent(mot.Mot.toLowerCase())}" class="mot-favori-link">
                            ${mot.Mot.charAt(0).toUpperCase() + mot.Mot.slice(1)}
                            <span class="mot-difficulte">${'‚òÖ'.repeat(mot.Difficult√©)}</span>
                        </a>
                        <button onclick="supprimerFavoriIndividuel('${mot.Mot}', this)" class="btn-supprimer-individuel" title="Retirer ce favori">
                            ‚úï
                        </button>
                    </div>
                    <div class="mot-type">${mot.Type}</div>
                </div>`
            ).join('');
        }
    }

    async function supprimerFavoriIndividuel(mot, button) {
        // Animation de suppression
        const motElement = button.closest('.mot-item-favoris');
        motElement.classList.add('removing');
        
        setTimeout(async () => {
            try {
                const response = await fetch('/api/favoris/toggle', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ mot: mot.toLowerCase() })
                });
                
                const result = await response.json();
                if (result.success) {
                    // Recharger la page pour afficher les changements
                    location.reload();
                }
            } catch (error) {
                console.error('Erreur lors de la suppression:', error);
                motElement.classList.remove('removing');
            }
        }, 300);
    }

    async function viderTousFavoris() {
        if (confirm('√ätes-vous s√ªr de vouloir supprimer tous vos favoris ?')) {
            const favoris = <%- JSON.stringify(userFavoris) %>;
            
            try {
                // Supprimer tous les favoris un par un
                await Promise.all(favoris.map(favori => 
                    fetch('/api/favoris/toggle', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ mot: favori.mot })
                    })
                ));
                location.reload();
            } catch (error) {
                console.error('Erreur lors de la suppression de tous les favoris:', error);
            }
        }
    }
    // Initialisation
    document.addEventListener('DOMContentLoaded', () => {
        afficherFavoris();
        document.getElementById('vider-favoris').addEventListener('click', viderTousFavoris);
    });
</script>
</div>
</body>
</html>
