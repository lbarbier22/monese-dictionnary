<!DOCTYPE html>
<html lang="fr">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= mot.Mot.charAt(0).toUpperCase() + mot.Mot.slice(1) %> – Monèse</title>
    <link rel="stylesheet" href="/style.css">
</head>

<body>
<%- include('navbar') %>

<div class="main-container">
    <div class="carte">
    <div class="heart-favoris" id="toggleFavori" data-mot="<%= mot.Mot %>" title="Ajouter/Retirer des favoris">
        <span id="favoriIcon">🤍</span>
    </div>
    <div class="mot"><%= mot.Mot.charAt(0).toUpperCase() + mot.Mot.slice(1) %> <span style="color: royalblue"><%= '★'.repeat(mot.Difficulté) %></span></div>
    <div class="type"><%= mot.Type %></div>
    <div class="definition"><%= mot.Définition %></div>
    <div class="exemple">"<%= mot.Exemple %>"</div>
    <div class="bouton">
        <button id="copierLien">🔗 Copier le lien</button>
        <span id="copieMessage" style="display: none; color: green; margin-left: 10px;">Lien copié !</span>
    </div>
</div>
</div>
</body>
</html>

<script>
    // Gestion des favoris côté serveur
    async function getFavoris() {
        try {
            const response = await fetch('/api/favoris');
            return await response.json();
        } catch (error) {
            console.error('Erreur lors de la récupération des favoris:', error);
            return [];
        }
    }

    async function estFavori(mot) {
        const favoris = await getFavoris();
        return favoris.some(f => f.mot === mot.toLowerCase());
    }

    async function toggleFavori(mot) {
        try {
            const response = await fetch('/api/favoris/toggle', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ mot: mot.toLowerCase() })
            });
            
            const result = await response.json();
            if (result.success) {
                updateFavoriButton(mot, result.isFavori);
            }
        } catch (error) {
            console.error('Erreur lors de la modification des favoris:', error);
        }
    }

    function updateFavoriButton(mot, isFavoriBool = null) {
        const favoriIcon = document.getElementById('favoriIcon');
        
        if (isFavoriBool !== null) {
            // Utiliser la valeur fournie
            if (isFavoriBool) {
                favoriIcon.textContent = '❤️';
            } else {
                favoriIcon.textContent = '🤍';
            }
        } else {
            // Vérifier de manière asynchrone
            estFavori(mot).then(isFav => {
                if (isFav) {
                    favoriIcon.textContent = '❤️';
                } else {
                    favoriIcon.textContent = '🤍';
                }
            });
        }
    }

    // Initialisation
    document.addEventListener('DOMContentLoaded', () => {
        const motActuel = '<%= mot.Mot %>';
        const heartElement = document.getElementById('toggleFavori');
        const iconElement = document.getElementById('favoriIcon');
        
        updateFavoriButton(motActuel);
        
        // Gestion du clic
        heartElement.addEventListener('click', async () => {
            await toggleFavori(motActuel);
        });
        
        // Effet de survol pour remplir le cœur
        heartElement.addEventListener('mouseenter', async () => {
            if (!(await estFavori(motActuel))) {
                iconElement.textContent = '❤️';
            }
        });
        
        heartElement.addEventListener('mouseleave', () => {
            updateFavoriButton(motActuel);
        });
    });

    // Gestion copie de lien (code existant)
    document.getElementById("copierLien").addEventListener("click", () => {
        const url = window.location.href;

        if (navigator.clipboard && navigator.clipboard.writeText) {
            navigator.clipboard.writeText(url).then(() => {
                afficherMessage();
            }).catch(err => {
                alert("Erreur lors de la copie : " + err);
            });
        } else {
            const input = document.createElement("input");
            document.body.appendChild(input);
            input.value = url;
            input.select();
            document.execCommand("copy");
            document.body.removeChild(input);
            afficherMessage();
        }

        function afficherMessage() {
            const message = document.getElementById("copieMessage");
            message.style.display = "inline";
            setTimeout(() => message.style.display = "none", 2000);
        }
    });
</script>
